name: Deploy to Firebase

on:
  push:
    branches: [ main ]

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install Frontend Dependencies
        working-directory: ./timebridge-ai/frontend
        run: |
          npm install --legacy-peer-deps
          npm install firebase @firebase/auth @firebase/app
          
      - name: Create Firebase Config
        working-directory: ./timebridge-ai/frontend
        run: |
          mkdir -p src/lib/firebase
          echo "import { initializeApp } from 'firebase/app';
          import { getAuth } from 'firebase/auth';
          
          export const firebaseConfig = {
            apiKey: '${{ secrets.FIREBASE_API_KEY }}',
            authDomain: '${{ secrets.FIREBASE_AUTH_DOMAIN }}',
            projectId: 'timebridgeai',
            storageBucket: 'timebridgeai.appspot.com',
            messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}',
            appId: '${{ secrets.FIREBASE_APP_ID }}'
          };
          
          const app = initializeApp(firebaseConfig);
          export const auth = getAuth(app);
          export default app;" > src/lib/firebase/config.ts
          
      - name: Build Frontend
        working-directory: ./timebridge-ai/frontend
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: "timebridgeai"
        run: npm run build
        
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          channelId: live
          projectId: timebridgeai

  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install Backend Dependencies
        working-directory: ./timebridge-ai/backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          token_format: 'access_token'
          create_credentials_file: true
          
      - name: Configure Docker
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev
          
      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: timebridge-backend
          region: us-central1
          source: ./timebridge-ai/backend
          project_id: timebridgeai 