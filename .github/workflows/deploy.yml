name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]
    paths:
      - 'timebridge-ai/**'
  workflow_dispatch:

env:
  PROJECT_ID: timebridgeai
  REGION: us-central1
  BACKEND_SERVICE: timebridge-backend

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Authorize Docker push
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build and Push Backend Container
        working-directory: ./timebridge-ai/backend
        run: |
          docker build -t us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/$BACKEND_SERVICE:${{ github.sha }} .
          docker push us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/$BACKEND_SERVICE:${{ github.sha }}

      - name: Deploy Backend to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.BACKEND_SERVICE }}
          region: ${{ env.REGION }}
          image: us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/${{ env.BACKEND_SERVICE }}:${{ github.sha }}
          env_vars: |
            FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}
            FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }}
            FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
          secrets: |
            FIREBASE_CREDENTIALS=projects/${{ env.PROJECT_ID }}/secrets/FIREBASE_SERVICE_ACCOUNT/versions/latest
          flags: |
            --allow-unauthenticated
            --port=8080
            --memory=512Mi
            --cpu=1
            --max-instances=3
            --min-instances=0
            --timeout=3600
            --set-env-vars=FIREBASE_CREDENTIALS_PATH=/var/run/secrets/FIREBASE_CREDENTIALS

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Frontend Dependencies
        working-directory: ./timebridge-ai/frontend
        run: npm install

      - name: Build Frontend
        working-directory: ./timebridge-ai/frontend
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_API_URL: https://${{ env.BACKEND_SERVICE }}-${{ github.sha }}-uc.a.run.app
        run: npm run build

      - name: Deploy Frontend to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          channelId: live
          projectId: ${{ env.PROJECT_ID }}
          entryPoint: ./timebridge-ai 